Index: hostapd-2.1/src/drivers/driver_wext.c
===================================================================
--- hostapd-2.1.orig/src/drivers/driver_wext.c
+++ hostapd-2.1/src/drivers/driver_wext.c
@@ -1132,17 +1132,23 @@ int wpa_driver_wext_scan(void *priv, str
 
 
 static u8 * wpa_driver_wext_giwscan(struct wpa_driver_wext_data *drv,
-				    size_t *len)
+				    size_t *len, int offset, int *res_incomplete)
 {
 	struct iwreq iwr;
+    struct iw_param req_offset;
 	u8 *res_buf;
 	size_t res_buf_len;
 
+	*res_incomplete = 0;
 	res_buf_len = IW_SCAN_MAX_DATA;
 	for (;;) {
 		res_buf = os_malloc(res_buf_len);
 		if (res_buf == NULL)
 			return NULL;
+		os_memset(&req_offset, 0, sizeof(req_offset));
+	    req_offset.value = offset;
+	    req_offset.disabled = 0;
+	    os_memcpy(res_buf, &req_offset, sizeof(req_offset));
 		os_memset(&iwr, 0, sizeof(iwr));
 		os_strlcpy(iwr.ifr_name, drv->ifname, IFNAMSIZ);
 		iwr.u.data.pointer = res_buf;
@@ -1173,6 +1179,8 @@ static u8 * wpa_driver_wext_giwscan(stru
 	}
 	*len = iwr.u.data.length;
 
+	*res_incomplete = !!(iwr.u.data.flags & 0x4000);
+
 	return res_buf;
 }
 
@@ -1499,26 +1507,35 @@ static void wpa_driver_wext_add_scan_ent
 struct wpa_scan_results * wpa_driver_wext_get_scan_results(void *priv)
 {
 	struct wpa_driver_wext_data *drv = priv;
-	size_t len;
+	size_t len, len_total;
 	int first;
 	u8 *res_buf;
 	struct iw_event iwe_buf, *iwe = &iwe_buf;
 	char *pos, *end, *custom;
 	struct wpa_scan_results *res;
 	struct wext_scan_data data;
+	int res_processed;
+	int res_incomplete;
 
-	res_buf = wpa_driver_wext_giwscan(drv, &len);
-	if (res_buf == NULL)
+	res = os_zalloc(sizeof(*res));
+	if (res == NULL) {
 		return NULL;
+	}
+
+	len_total = 0;
+	res_processed = 0;
 
+scan_continue:
 	first = 1;
 
-	res = os_zalloc(sizeof(*res));
-	if (res == NULL) {
-		os_free(res_buf);
+	res_buf = wpa_driver_wext_giwscan(drv, &len, res_processed, &res_incomplete);
+	if (res_buf == NULL) {
+		os_free(res);
 		return NULL;
 	}
 
+	len_total += len;
+
 	pos = (char *) res_buf;
 	end = (char *) res_buf + len;
 	os_memset(&data, 0, sizeof(data));
@@ -1544,8 +1561,10 @@ struct wpa_scan_results * wpa_driver_wex
 
 		switch (iwe->cmd) {
 		case SIOCGIWAP:
-			if (!first)
+			if (!first) {
 				wpa_driver_wext_add_scan_entry(res, &data);
+				res_processed++;
+			}
 			first = 0;
 			os_free(data.ie);
 			os_memset(&data, 0, sizeof(data));
@@ -1582,12 +1601,20 @@ struct wpa_scan_results * wpa_driver_wex
 	}
 	os_free(res_buf);
 	res_buf = NULL;
-	if (!first)
+	/* Add the last scan entry only if results are complete (i.e. no more scan data).
+	 * If results are incomplete then skip it as the last scan entry is always invalid. */
+	if (!first && !res_incomplete) {
 		wpa_driver_wext_add_scan_entry(res, &data);
+		res_processed++;
+	}
 	os_free(data.ie);
 
+	if (res_incomplete) {
+		goto scan_continue;
+	}
+
 	wpa_printf(MSG_DEBUG, "Received %lu bytes of scan results (%lu BSSes)",
-		   (unsigned long) len, (unsigned long) res->num);
+		   (unsigned long) len_total, (unsigned long) res->num);
 
 	return res;
 }
