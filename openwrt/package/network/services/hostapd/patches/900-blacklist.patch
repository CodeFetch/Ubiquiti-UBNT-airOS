Index: hostapd-2.1/wpa_supplicant/events.c
===================================================================
--- hostapd-2.1.orig/wpa_supplicant/events.c
+++ hostapd-2.1/wpa_supplicant/events.c
@@ -2099,7 +2099,9 @@ static void wpa_supplicant_event_disasso
 			"pre-shared key may be incorrect");
 		if (wpas_p2p_4way_hs_failed(wpa_s) > 0)
 			return; /* P2P group removed */
-		wpas_auth_failed(wpa_s);
+		/* UBNT: commented out because it disables entire ESS and other APs
+		 * with the same SSID are not even tried */
+		//wpas_auth_failed(wpa_s);
 	}
 	if (!wpa_s->disconnected &&
 	    (!wpa_s->auto_reconnect_disabled ||
@@ -2217,7 +2219,8 @@ wpa_supplicant_event_michael_mic_failure
 		/* initialize countermeasures */
 		wpa_s->countermeasures = 1;
 
-		wpa_blacklist_add(wpa_s, wpa_s->bssid);
+		/* UBNT: commented out because AP is blacklisted in wpas_connection_failed() */
+		//wpa_blacklist_add(wpa_s, wpa_s->bssid);
 
 		wpa_msg(wpa_s, MSG_WARNING, "TKIP countermeasures started");
 
@@ -2550,7 +2553,11 @@ static void wpas_event_disconnect(struct
 		(wpa_s->key_mgmt & WPA_KEY_MGMT_IEEE8021X_NO_WPA)) &&
 	       eapol_sm_failed(wpa_s->eapol))) &&
 	     !wpa_s->eap_expected_failure))
-		wpas_auth_failed(wpa_s);
+	{
+		/* UBNT: commented out because it disables entire ESS and other APs
+		 * with the same SSID are not even tried */
+		//wpas_auth_failed(wpa_s);
+	}
 
 #ifdef CONFIG_P2P
 	if (deauth && reason_code > 0) {
Index: hostapd-2.1/wpa_supplicant/wpa_supplicant.c
===================================================================
--- hostapd-2.1.orig/wpa_supplicant/wpa_supplicant.c
+++ hostapd-2.1/wpa_supplicant/wpa_supplicant.c
@@ -227,7 +227,9 @@ static void wpa_supplicant_timeout(void
 		bssid = wpa_s->pending_bssid;
 	wpa_msg(wpa_s, MSG_INFO, "Authentication with " MACSTR " timed out.",
 		MAC2STR(bssid));
-	wpa_blacklist_add(wpa_s, bssid);
+	/* UBNT: commented out because it disables entire ESS and other APs
+	 * with the same SSID are not even tried */
+	//wpa_blacklist_add(wpa_s, bssid);
 	wpa_sm_notify_disassoc(wpa_s->wpa);
 	wpa_supplicant_deauthenticate(wpa_s, WLAN_REASON_DEAUTH_LEAVING);
 	wpa_s->reassociate = 1;
@@ -4182,7 +4184,8 @@ void wpas_connection_failed(struct wpa_s
 		if (freqs) {
 			wpa_dbg(wpa_s, MSG_DEBUG, "Another BSS in this ESS "
 				"has been seen; try it next");
-			wpa_blacklist_add(wpa_s, bssid);
+			/* UBNT: commented out because it's already blacklisted 13 lines above */
+			//wpa_blacklist_add(wpa_s, bssid);
 			/*
 			 * On the next scan, go through only the known channels
 			 * used in this ESS based on previous scans to speed up
@@ -4436,6 +4439,7 @@ void wpas_clear_temp_disabled(struct wpa
 	ssid->disabled_until.usec = 0;
 	if (clear_failures)
 		ssid->auth_failures = 0;
+	wpa_s->extra_blacklist_count = 0;
 }
 
 
