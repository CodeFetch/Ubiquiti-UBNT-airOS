--- a/networking/zcip.c
+++ b/networking/zcip.c
@@ -225,18 +225,19 @@ int zcip_main(int argc UNUSED_PARAM, cha
 #define verbose      (L.verbose     )
 
 	memset(&L, 0, sizeof(L));
 	INIT_G();
 
 #define FOREGROUND (opts & 1)
 #define QUIT       (opts & 2)
+#define NODELAY    (opts & 16) //UBNT: skip 5 sec. delay if "-n" option is specified
 	// Parse commandline: prog [options] ifname script
 	// exactly 2 args; -v accumulates and implies -f
 	opt_complementary = "=2:vv:vf";
-	opts = getopt32(argv, "fqr:l:v", &r_opt, &l_opt, &verbose);
+	opts = getopt32(argv, "fqr:l:vn", &r_opt, &l_opt, &verbose);
 #if !BB_MMU
 	// on NOMMU reexec early (or else we will rerun things twice)
 	if (!FOREGROUND)
 		bb_daemonize_or_rexec(0 /*was: DAEMON_CHDIR_ROOT*/, argv);
 #endif
 	// Open an ARP socket
 	// (need to do it before openlog to prevent openlog from taking
@@ -278,14 +279,17 @@ int zcip_main(int argc UNUSED_PARAM, cha
 
 	xsetenv("interface", argv_intf);
 
 	// Initialize the interface (modprobe, ifup, etc)
 	if (run(argv, "init", 0))
 		return EXIT_FAILURE;
 
+	// UBNT: Make sure, that all available interfaces are up and running
+	if (!NODELAY) sleep(5);
+
 	// Initialize G.iface_sockaddr
 	// G.iface_sockaddr is: { u16 sa_family; u8 sa_data[14]; }
 	//memset(&G.iface_sockaddr, 0, sizeof(G.iface_sockaddr));
 	//TODO: are we leaving sa_family == 0 (AF_UNSPEC)?!
 	safe_strncpy(G.iface_sockaddr.sa_data, argv_intf, sizeof(G.iface_sockaddr.sa_data));
 
 	// Bind to the interface's ARP socket
